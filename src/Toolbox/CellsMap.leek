 function getClosestCellFromSet(integer cell, Set cells)=> integer{
	debug("getClosestCellFromSet(cell) cell" + cell)
	debug("cells " + cells)
	integer minDist = 10000000
	integer dist = 10000000
	integer closestCell = -1
	if(setSize(cells) > 0) 
		 for(integer c in cells) {
			 debug("machin " + cell) 
			 debug("machin " + c)
			dist = getPathLength(cell, c) 
			 if(dist < minDist ){
					closestCell = c
					minDist = dist
			 }

		 }
	debug("closestCell " + closestCell)

	return closestCell 
}

 function getFurthestCellFromSet(integer cell, Set cells)=> integer{
	debug("getFurthestCellFromSet(cell) cell" + cell)
	debug("cells " + cells)
	integer maxDist = -1
	integer dist = -1
	integer furthestCell = -1
	if(setSize(cells) > 0) 
		 for(integer c in cells) {
			 debug("machin loin cell " + cell) 
			 debug("machin loin c " + c)
			dist = getPathLength(cell, c) 
			 if(dist > maxDist ){
					furthestCell = c
					maxDist = dist
			 }

		 }
	debug("furthestCell " + furthestCell)

	return furthestCell 
}